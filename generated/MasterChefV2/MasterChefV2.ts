// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get lastDepositedTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class FreeFeeUser extends ethereum.Event {
  get params(): FreeFeeUser__Params {
    return new FreeFeeUser__Params(this);
  }
}

export class FreeFeeUser__Params {
  _event: FreeFeeUser;

  constructor(event: FreeFeeUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get free(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Harvest extends ethereum.Event {
  get params(): Harvest__Params {
    return new Harvest__Params(this);
  }
}

export class Harvest__Params {
  _event: Harvest;

  constructor(event: Harvest) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Init extends ethereum.Event {
  get params(): Init__Params {
    return new Init__Params(this);
  }
}

export class Init__Params {
  _event: Init;

  constructor(event: Init) {
    this._event = event;
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lockedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get lockedDuration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get blockTimestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewBoostContract extends ethereum.Event {
  get params(): NewBoostContract__Params {
    return new NewBoostContract__Params(this);
  }
}

export class NewBoostContract__Params {
  _event: NewBoostContract;

  constructor(event: NewBoostContract) {
    this._event = event;
  }

  get boostContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewBoostWeight extends ethereum.Event {
  get params(): NewBoostWeight__Params {
    return new NewBoostWeight__Params(this);
  }
}

export class NewBoostWeight__Params {
  _event: NewBoostWeight;

  constructor(event: NewBoostWeight) {
    this._event = event;
  }

  get boostWeight(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewDurationFactor extends ethereum.Event {
  get params(): NewDurationFactor__Params {
    return new NewDurationFactor__Params(this);
  }
}

export class NewDurationFactor__Params {
  _event: NewDurationFactor;

  constructor(event: NewDurationFactor) {
    this._event = event;
  }

  get durationFactor(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewDurationFactorOverdue extends ethereum.Event {
  get params(): NewDurationFactorOverdue__Params {
    return new NewDurationFactorOverdue__Params(this);
  }
}

export class NewDurationFactorOverdue__Params {
  _event: NewDurationFactorOverdue;

  constructor(event: NewDurationFactorOverdue) {
    this._event = event;
  }

  get durationFactorOverdue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewMaxLockDuration extends ethereum.Event {
  get params(): NewMaxLockDuration__Params {
    return new NewMaxLockDuration__Params(this);
  }
}

export class NewMaxLockDuration__Params {
  _event: NewMaxLockDuration;

  constructor(event: NewMaxLockDuration) {
    this._event = event;
  }

  get maxLockDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewOperator extends ethereum.Event {
  get params(): NewOperator__Params {
    return new NewOperator__Params(this);
  }
}

export class NewOperator__Params {
  _event: NewOperator;

  constructor(event: NewOperator) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewOverdueFee extends ethereum.Event {
  get params(): NewOverdueFee__Params {
    return new NewOverdueFee__Params(this);
  }
}

export class NewOverdueFee__Params {
  _event: NewOverdueFee;

  constructor(event: NewOverdueFee) {
    this._event = event;
  }

  get overdueFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewPerformanceFee extends ethereum.Event {
  get params(): NewPerformanceFee__Params {
    return new NewPerformanceFee__Params(this);
  }
}

export class NewPerformanceFee__Params {
  _event: NewPerformanceFee;

  constructor(event: NewPerformanceFee) {
    this._event = event;
  }

  get performanceFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewPerformanceFeeContract extends ethereum.Event {
  get params(): NewPerformanceFeeContract__Params {
    return new NewPerformanceFeeContract__Params(this);
  }
}

export class NewPerformanceFeeContract__Params {
  _event: NewPerformanceFeeContract;

  constructor(event: NewPerformanceFeeContract) {
    this._event = event;
  }

  get performanceFeeContract(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewTreasury extends ethereum.Event {
  get params(): NewTreasury__Params {
    return new NewTreasury__Params(this);
  }
}

export class NewTreasury__Params {
  _event: NewTreasury;

  constructor(event: NewTreasury) {
    this._event = event;
  }

  get treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewUnlockFreeDuration extends ethereum.Event {
  get params(): NewUnlockFreeDuration__Params {
    return new NewUnlockFreeDuration__Params(this);
  }
}

export class NewUnlockFreeDuration__Params {
  _event: NewUnlockFreeDuration;

  constructor(event: NewUnlockFreeDuration) {
    this._event = event;
  }

  get unlockFreeDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewVCakeContract extends ethereum.Event {
  get params(): NewVCakeContract__Params {
    return new NewVCakeContract__Params(this);
  }
}

export class NewVCakeContract__Params {
  _event: NewVCakeContract;

  constructor(event: NewVCakeContract) {
    this._event = event;
  }

  get VCake(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewWithdrawFee extends ethereum.Event {
  get params(): NewWithdrawFee__Params {
    return new NewWithdrawFee__Params(this);
  }
}

export class NewWithdrawFee__Params {
  _event: NewWithdrawFee;

  constructor(event: NewWithdrawFee) {
    this._event = event;
  }

  get withdrawFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewWithdrawFeeContract extends ethereum.Event {
  get params(): NewWithdrawFeeContract__Params {
    return new NewWithdrawFeeContract__Params(this);
  }
}

export class NewWithdrawFeeContract__Params {
  _event: NewWithdrawFeeContract;

  constructor(event: NewWithdrawFeeContract) {
    this._event = event;
  }

  get withdrawFeeContract(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewWithdrawFeePeriod extends ethereum.Event {
  get params(): NewWithdrawFeePeriod__Params {
    return new NewWithdrawFeePeriod__Params(this);
  }
}

export class NewWithdrawFeePeriod__Params {
  _event: NewWithdrawFeePeriod;

  constructor(event: NewWithdrawFeePeriod) {
    this._event = event;
  }

  get withdrawFeePeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get blockTimestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MasterChefV2__userInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }
}

export class MasterChefV2 extends ethereum.SmartContract {
  static bind(address: Address): MasterChefV2 {
    return new MasterChefV2("MasterChefV2", address);
  }

  BOOST_WEIGHT(): BigInt {
    let result = super.call("BOOST_WEIGHT", "BOOST_WEIGHT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_BOOST_WEIGHT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("BOOST_WEIGHT", "BOOST_WEIGHT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  BOOST_WEIGHT_LIMIT(): BigInt {
    let result = super.call(
      "BOOST_WEIGHT_LIMIT",
      "BOOST_WEIGHT_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_BOOST_WEIGHT_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BOOST_WEIGHT_LIMIT",
      "BOOST_WEIGHT_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  DURATION_FACTOR(): BigInt {
    let result = super.call(
      "DURATION_FACTOR",
      "DURATION_FACTOR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_DURATION_FACTOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "DURATION_FACTOR",
      "DURATION_FACTOR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  DURATION_FACTOR_OVERDUE(): BigInt {
    let result = super.call(
      "DURATION_FACTOR_OVERDUE",
      "DURATION_FACTOR_OVERDUE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_DURATION_FACTOR_OVERDUE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "DURATION_FACTOR_OVERDUE",
      "DURATION_FACTOR_OVERDUE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_LOCK_DURATION(): BigInt {
    let result = super.call(
      "MAX_LOCK_DURATION",
      "MAX_LOCK_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_LOCK_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_LOCK_DURATION",
      "MAX_LOCK_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_LOCK_DURATION_LIMIT(): BigInt {
    let result = super.call(
      "MAX_LOCK_DURATION_LIMIT",
      "MAX_LOCK_DURATION_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_LOCK_DURATION_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_LOCK_DURATION_LIMIT",
      "MAX_LOCK_DURATION_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_OVERDUE_FEE(): BigInt {
    let result = super.call(
      "MAX_OVERDUE_FEE",
      "MAX_OVERDUE_FEE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_OVERDUE_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_OVERDUE_FEE",
      "MAX_OVERDUE_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_PERFORMANCE_FEE(): BigInt {
    let result = super.call(
      "MAX_PERFORMANCE_FEE",
      "MAX_PERFORMANCE_FEE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_PERFORMANCE_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PERFORMANCE_FEE",
      "MAX_PERFORMANCE_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_WITHDRAW_FEE(): BigInt {
    let result = super.call(
      "MAX_WITHDRAW_FEE",
      "MAX_WITHDRAW_FEE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_WITHDRAW_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_WITHDRAW_FEE",
      "MAX_WITHDRAW_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_WITHDRAW_FEE_PERIOD(): BigInt {
    let result = super.call(
      "MAX_WITHDRAW_FEE_PERIOD",
      "MAX_WITHDRAW_FEE_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_WITHDRAW_FEE_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_WITHDRAW_FEE_PERIOD",
      "MAX_WITHDRAW_FEE_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_DEPOSIT_AMOUNT(): BigInt {
    let result = super.call(
      "MIN_DEPOSIT_AMOUNT",
      "MIN_DEPOSIT_AMOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_DEPOSIT_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_DEPOSIT_AMOUNT",
      "MIN_DEPOSIT_AMOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_LOCK_DURATION(): BigInt {
    let result = super.call(
      "MIN_LOCK_DURATION",
      "MIN_LOCK_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_LOCK_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_LOCK_DURATION",
      "MIN_LOCK_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_WITHDRAW_AMOUNT(): BigInt {
    let result = super.call(
      "MIN_WITHDRAW_AMOUNT",
      "MIN_WITHDRAW_AMOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_WITHDRAW_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_WITHDRAW_AMOUNT",
      "MIN_WITHDRAW_AMOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRECISION_FACTOR(): BigInt {
    let result = super.call(
      "PRECISION_FACTOR",
      "PRECISION_FACTOR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PRECISION_FACTOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRECISION_FACTOR",
      "PRECISION_FACTOR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRECISION_FACTOR_SHARE(): BigInt {
    let result = super.call(
      "PRECISION_FACTOR_SHARE",
      "PRECISION_FACTOR_SHARE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PRECISION_FACTOR_SHARE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRECISION_FACTOR_SHARE",
      "PRECISION_FACTOR_SHARE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UNLOCK_FREE_DURATION(): BigInt {
    let result = super.call(
      "UNLOCK_FREE_DURATION",
      "UNLOCK_FREE_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_UNLOCK_FREE_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "UNLOCK_FREE_DURATION",
      "UNLOCK_FREE_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VCake(): Address {
    let result = super.call("VCake", "VCake():(address)", []);

    return result[0].toAddress();
  }

  try_VCake(): ethereum.CallResult<Address> {
    let result = super.tryCall("VCake", "VCake():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  available(): BigInt {
    let result = super.call("available", "available():(uint256)", []);

    return result[0].toBigInt();
  }

  try_available(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("available", "available():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(): BigInt {
    let result = super.call("balanceOf", "balanceOf():(uint256)", []);

    return result[0].toBigInt();
  }

  try_balanceOf(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  boostContract(): Address {
    let result = super.call("boostContract", "boostContract():(address)", []);

    return result[0].toAddress();
  }

  try_boostContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "boostContract",
      "boostContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cakePoolPID(): BigInt {
    let result = super.call("cakePoolPID", "cakePoolPID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cakePoolPID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("cakePoolPID", "cakePoolPID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateOverdueFee(_user: Address): BigInt {
    let result = super.call(
      "calculateOverdueFee",
      "calculateOverdueFee(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_calculateOverdueFee(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateOverdueFee",
      "calculateOverdueFee(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculatePerformanceFee(_user: Address): BigInt {
    let result = super.call(
      "calculatePerformanceFee",
      "calculatePerformanceFee(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_calculatePerformanceFee(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculatePerformanceFee",
      "calculatePerformanceFee(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateTotalPendingCakeRewards(): BigInt {
    let result = super.call(
      "calculateTotalPendingCakeRewards",
      "calculateTotalPendingCakeRewards():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_calculateTotalPendingCakeRewards(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateTotalPendingCakeRewards",
      "calculateTotalPendingCakeRewards():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateWithdrawFee(_user: Address, _shares: BigInt): BigInt {
    let result = super.call(
      "calculateWithdrawFee",
      "calculateWithdrawFee(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_shares)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateWithdrawFee(
    _user: Address,
    _shares: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateWithdrawFee",
      "calculateWithdrawFee(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_shares)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  freeOverdueFeeUsers(param0: Address): boolean {
    let result = super.call(
      "freeOverdueFeeUsers",
      "freeOverdueFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_freeOverdueFeeUsers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "freeOverdueFeeUsers",
      "freeOverdueFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  freePerformanceFeeUsers(param0: Address): boolean {
    let result = super.call(
      "freePerformanceFeeUsers",
      "freePerformanceFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_freePerformanceFeeUsers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "freePerformanceFeeUsers",
      "freePerformanceFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  freeWithdrawFeeUsers(param0: Address): boolean {
    let result = super.call(
      "freeWithdrawFeeUsers",
      "freeWithdrawFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_freeWithdrawFeeUsers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "freeWithdrawFeeUsers",
      "freeWithdrawFeeUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPricePerFullShare(): BigInt {
    let result = super.call(
      "getPricePerFullShare",
      "getPricePerFullShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getPricePerFullShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPricePerFullShare",
      "getPricePerFullShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  masterchefV2(): Address {
    let result = super.call("masterchefV2", "masterchefV2():(address)", []);

    return result[0].toAddress();
  }

  try_masterchefV2(): ethereum.CallResult<Address> {
    let result = super.tryCall("masterchefV2", "masterchefV2():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  overdueFee(): BigInt {
    let result = super.call("overdueFee", "overdueFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_overdueFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("overdueFee", "overdueFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  performanceFee(): BigInt {
    let result = super.call("performanceFee", "performanceFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_performanceFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "performanceFee",
      "performanceFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  performanceFeeContract(): BigInt {
    let result = super.call(
      "performanceFeeContract",
      "performanceFeeContract():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_performanceFeeContract(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "performanceFeeContract",
      "performanceFeeContract():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalBoostDebt(): BigInt {
    let result = super.call("totalBoostDebt", "totalBoostDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBoostDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBoostDebt",
      "totalBoostDebt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalLockedAmount(): BigInt {
    let result = super.call(
      "totalLockedAmount",
      "totalLockedAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalLockedAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLockedAmount",
      "totalLockedAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalShares(): BigInt {
    let result = super.call("totalShares", "totalShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalShares", "totalShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userInfo(param0: Address): MasterChefV2__userInfoResult {
    let result = super.call(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new MasterChefV2__userInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBigInt()
    );
  }

  try_userInfo(
    param0: Address
  ): ethereum.CallResult<MasterChefV2__userInfoResult> {
    let result = super.tryCall(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MasterChefV2__userInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBigInt()
      )
    );
  }

  withdrawFee(): BigInt {
    let result = super.call("withdrawFee", "withdrawFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_withdrawFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdrawFee", "withdrawFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawFeeContract(): BigInt {
    let result = super.call(
      "withdrawFeeContract",
      "withdrawFeeContract():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_withdrawFeeContract(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawFeeContract",
      "withdrawFeeContract():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawFeePeriod(): BigInt {
    let result = super.call(
      "withdrawFeePeriod",
      "withdrawFeePeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_withdrawFeePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawFeePeriod",
      "withdrawFeePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _masterchefV2(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _admin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _treasury(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _operator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _pid(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _lockDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class InCaseTokensGetStuckCall extends ethereum.Call {
  get inputs(): InCaseTokensGetStuckCall__Inputs {
    return new InCaseTokensGetStuckCall__Inputs(this);
  }

  get outputs(): InCaseTokensGetStuckCall__Outputs {
    return new InCaseTokensGetStuckCall__Outputs(this);
  }
}

export class InCaseTokensGetStuckCall__Inputs {
  _call: InCaseTokensGetStuckCall;

  constructor(call: InCaseTokensGetStuckCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InCaseTokensGetStuckCall__Outputs {
  _call: InCaseTokensGetStuckCall;

  constructor(call: InCaseTokensGetStuckCall) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get dummyToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetBoostContractCall extends ethereum.Call {
  get inputs(): SetBoostContractCall__Inputs {
    return new SetBoostContractCall__Inputs(this);
  }

  get outputs(): SetBoostContractCall__Outputs {
    return new SetBoostContractCall__Outputs(this);
  }
}

export class SetBoostContractCall__Inputs {
  _call: SetBoostContractCall;

  constructor(call: SetBoostContractCall) {
    this._call = call;
  }

  get _boostContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBoostContractCall__Outputs {
  _call: SetBoostContractCall;

  constructor(call: SetBoostContractCall) {
    this._call = call;
  }
}

export class SetBoostWeightCall extends ethereum.Call {
  get inputs(): SetBoostWeightCall__Inputs {
    return new SetBoostWeightCall__Inputs(this);
  }

  get outputs(): SetBoostWeightCall__Outputs {
    return new SetBoostWeightCall__Outputs(this);
  }
}

export class SetBoostWeightCall__Inputs {
  _call: SetBoostWeightCall;

  constructor(call: SetBoostWeightCall) {
    this._call = call;
  }

  get _boostWeight(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBoostWeightCall__Outputs {
  _call: SetBoostWeightCall;

  constructor(call: SetBoostWeightCall) {
    this._call = call;
  }
}

export class SetDurationFactorCall extends ethereum.Call {
  get inputs(): SetDurationFactorCall__Inputs {
    return new SetDurationFactorCall__Inputs(this);
  }

  get outputs(): SetDurationFactorCall__Outputs {
    return new SetDurationFactorCall__Outputs(this);
  }
}

export class SetDurationFactorCall__Inputs {
  _call: SetDurationFactorCall;

  constructor(call: SetDurationFactorCall) {
    this._call = call;
  }

  get _durationFactor(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDurationFactorCall__Outputs {
  _call: SetDurationFactorCall;

  constructor(call: SetDurationFactorCall) {
    this._call = call;
  }
}

export class SetDurationFactorOverdueCall extends ethereum.Call {
  get inputs(): SetDurationFactorOverdueCall__Inputs {
    return new SetDurationFactorOverdueCall__Inputs(this);
  }

  get outputs(): SetDurationFactorOverdueCall__Outputs {
    return new SetDurationFactorOverdueCall__Outputs(this);
  }
}

export class SetDurationFactorOverdueCall__Inputs {
  _call: SetDurationFactorOverdueCall;

  constructor(call: SetDurationFactorOverdueCall) {
    this._call = call;
  }

  get _durationFactorOverdue(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDurationFactorOverdueCall__Outputs {
  _call: SetDurationFactorOverdueCall;

  constructor(call: SetDurationFactorOverdueCall) {
    this._call = call;
  }
}

export class SetFreePerformanceFeeUserCall extends ethereum.Call {
  get inputs(): SetFreePerformanceFeeUserCall__Inputs {
    return new SetFreePerformanceFeeUserCall__Inputs(this);
  }

  get outputs(): SetFreePerformanceFeeUserCall__Outputs {
    return new SetFreePerformanceFeeUserCall__Outputs(this);
  }
}

export class SetFreePerformanceFeeUserCall__Inputs {
  _call: SetFreePerformanceFeeUserCall;

  constructor(call: SetFreePerformanceFeeUserCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _free(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetFreePerformanceFeeUserCall__Outputs {
  _call: SetFreePerformanceFeeUserCall;

  constructor(call: SetFreePerformanceFeeUserCall) {
    this._call = call;
  }
}

export class SetMaxLockDurationCall extends ethereum.Call {
  get inputs(): SetMaxLockDurationCall__Inputs {
    return new SetMaxLockDurationCall__Inputs(this);
  }

  get outputs(): SetMaxLockDurationCall__Outputs {
    return new SetMaxLockDurationCall__Outputs(this);
  }
}

export class SetMaxLockDurationCall__Inputs {
  _call: SetMaxLockDurationCall;

  constructor(call: SetMaxLockDurationCall) {
    this._call = call;
  }

  get _maxLockDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxLockDurationCall__Outputs {
  _call: SetMaxLockDurationCall;

  constructor(call: SetMaxLockDurationCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetOverdueFeeCall extends ethereum.Call {
  get inputs(): SetOverdueFeeCall__Inputs {
    return new SetOverdueFeeCall__Inputs(this);
  }

  get outputs(): SetOverdueFeeCall__Outputs {
    return new SetOverdueFeeCall__Outputs(this);
  }
}

export class SetOverdueFeeCall__Inputs {
  _call: SetOverdueFeeCall;

  constructor(call: SetOverdueFeeCall) {
    this._call = call;
  }

  get _overdueFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOverdueFeeCall__Outputs {
  _call: SetOverdueFeeCall;

  constructor(call: SetOverdueFeeCall) {
    this._call = call;
  }
}

export class SetOverdueFeeUserCall extends ethereum.Call {
  get inputs(): SetOverdueFeeUserCall__Inputs {
    return new SetOverdueFeeUserCall__Inputs(this);
  }

  get outputs(): SetOverdueFeeUserCall__Outputs {
    return new SetOverdueFeeUserCall__Outputs(this);
  }
}

export class SetOverdueFeeUserCall__Inputs {
  _call: SetOverdueFeeUserCall;

  constructor(call: SetOverdueFeeUserCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _free(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOverdueFeeUserCall__Outputs {
  _call: SetOverdueFeeUserCall;

  constructor(call: SetOverdueFeeUserCall) {
    this._call = call;
  }
}

export class SetPerformanceFeeCall extends ethereum.Call {
  get inputs(): SetPerformanceFeeCall__Inputs {
    return new SetPerformanceFeeCall__Inputs(this);
  }

  get outputs(): SetPerformanceFeeCall__Outputs {
    return new SetPerformanceFeeCall__Outputs(this);
  }
}

export class SetPerformanceFeeCall__Inputs {
  _call: SetPerformanceFeeCall;

  constructor(call: SetPerformanceFeeCall) {
    this._call = call;
  }

  get _performanceFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPerformanceFeeCall__Outputs {
  _call: SetPerformanceFeeCall;

  constructor(call: SetPerformanceFeeCall) {
    this._call = call;
  }
}

export class SetPerformanceFeeContractCall extends ethereum.Call {
  get inputs(): SetPerformanceFeeContractCall__Inputs {
    return new SetPerformanceFeeContractCall__Inputs(this);
  }

  get outputs(): SetPerformanceFeeContractCall__Outputs {
    return new SetPerformanceFeeContractCall__Outputs(this);
  }
}

export class SetPerformanceFeeContractCall__Inputs {
  _call: SetPerformanceFeeContractCall;

  constructor(call: SetPerformanceFeeContractCall) {
    this._call = call;
  }

  get _performanceFeeContract(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPerformanceFeeContractCall__Outputs {
  _call: SetPerformanceFeeContractCall;

  constructor(call: SetPerformanceFeeContractCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetUnlockFreeDurationCall extends ethereum.Call {
  get inputs(): SetUnlockFreeDurationCall__Inputs {
    return new SetUnlockFreeDurationCall__Inputs(this);
  }

  get outputs(): SetUnlockFreeDurationCall__Outputs {
    return new SetUnlockFreeDurationCall__Outputs(this);
  }
}

export class SetUnlockFreeDurationCall__Inputs {
  _call: SetUnlockFreeDurationCall;

  constructor(call: SetUnlockFreeDurationCall) {
    this._call = call;
  }

  get _unlockFreeDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUnlockFreeDurationCall__Outputs {
  _call: SetUnlockFreeDurationCall;

  constructor(call: SetUnlockFreeDurationCall) {
    this._call = call;
  }
}

export class SetVCakeContractCall extends ethereum.Call {
  get inputs(): SetVCakeContractCall__Inputs {
    return new SetVCakeContractCall__Inputs(this);
  }

  get outputs(): SetVCakeContractCall__Outputs {
    return new SetVCakeContractCall__Outputs(this);
  }
}

export class SetVCakeContractCall__Inputs {
  _call: SetVCakeContractCall;

  constructor(call: SetVCakeContractCall) {
    this._call = call;
  }

  get _VCake(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVCakeContractCall__Outputs {
  _call: SetVCakeContractCall;

  constructor(call: SetVCakeContractCall) {
    this._call = call;
  }
}

export class SetWithdrawFeeCall extends ethereum.Call {
  get inputs(): SetWithdrawFeeCall__Inputs {
    return new SetWithdrawFeeCall__Inputs(this);
  }

  get outputs(): SetWithdrawFeeCall__Outputs {
    return new SetWithdrawFeeCall__Outputs(this);
  }
}

export class SetWithdrawFeeCall__Inputs {
  _call: SetWithdrawFeeCall;

  constructor(call: SetWithdrawFeeCall) {
    this._call = call;
  }

  get _withdrawFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWithdrawFeeCall__Outputs {
  _call: SetWithdrawFeeCall;

  constructor(call: SetWithdrawFeeCall) {
    this._call = call;
  }
}

export class SetWithdrawFeeContractCall extends ethereum.Call {
  get inputs(): SetWithdrawFeeContractCall__Inputs {
    return new SetWithdrawFeeContractCall__Inputs(this);
  }

  get outputs(): SetWithdrawFeeContractCall__Outputs {
    return new SetWithdrawFeeContractCall__Outputs(this);
  }
}

export class SetWithdrawFeeContractCall__Inputs {
  _call: SetWithdrawFeeContractCall;

  constructor(call: SetWithdrawFeeContractCall) {
    this._call = call;
  }

  get _withdrawFeeContract(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWithdrawFeeContractCall__Outputs {
  _call: SetWithdrawFeeContractCall;

  constructor(call: SetWithdrawFeeContractCall) {
    this._call = call;
  }
}

export class SetWithdrawFeePeriodCall extends ethereum.Call {
  get inputs(): SetWithdrawFeePeriodCall__Inputs {
    return new SetWithdrawFeePeriodCall__Inputs(this);
  }

  get outputs(): SetWithdrawFeePeriodCall__Outputs {
    return new SetWithdrawFeePeriodCall__Outputs(this);
  }
}

export class SetWithdrawFeePeriodCall__Inputs {
  _call: SetWithdrawFeePeriodCall;

  constructor(call: SetWithdrawFeePeriodCall) {
    this._call = call;
  }

  get _withdrawFeePeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWithdrawFeePeriodCall__Outputs {
  _call: SetWithdrawFeePeriodCall;

  constructor(call: SetWithdrawFeePeriodCall) {
    this._call = call;
  }
}

export class SetWithdrawFeeUserCall extends ethereum.Call {
  get inputs(): SetWithdrawFeeUserCall__Inputs {
    return new SetWithdrawFeeUserCall__Inputs(this);
  }

  get outputs(): SetWithdrawFeeUserCall__Outputs {
    return new SetWithdrawFeeUserCall__Outputs(this);
  }
}

export class SetWithdrawFeeUserCall__Inputs {
  _call: SetWithdrawFeeUserCall;

  constructor(call: SetWithdrawFeeUserCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _free(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetWithdrawFeeUserCall__Outputs {
  _call: SetWithdrawFeeUserCall;

  constructor(call: SetWithdrawFeeUserCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawAllCall extends ethereum.Call {
  get inputs(): WithdrawAllCall__Inputs {
    return new WithdrawAllCall__Inputs(this);
  }

  get outputs(): WithdrawAllCall__Outputs {
    return new WithdrawAllCall__Outputs(this);
  }
}

export class WithdrawAllCall__Inputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }
}

export class WithdrawAllCall__Outputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }
}

export class WithdrawByAmountCall extends ethereum.Call {
  get inputs(): WithdrawByAmountCall__Inputs {
    return new WithdrawByAmountCall__Inputs(this);
  }

  get outputs(): WithdrawByAmountCall__Outputs {
    return new WithdrawByAmountCall__Outputs(this);
  }
}

export class WithdrawByAmountCall__Inputs {
  _call: WithdrawByAmountCall;

  constructor(call: WithdrawByAmountCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawByAmountCall__Outputs {
  _call: WithdrawByAmountCall;

  constructor(call: WithdrawByAmountCall) {
    this._call = call;
  }
}
